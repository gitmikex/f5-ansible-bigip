---

- name: Create another pool - First device
  bigip_command:
    commands:
      - tmsh create ltm pool cs2.pool
  when: inventory_hostname == 'bigip1'

- name: Assert Create another pool - First device
  assert:
    that:
      - result is changed

- name: Sync configuration from most recent - Second device
  bigip_configsync_action:
    device_group: "{{ device_group }}"
    sync_group_to_device: yes
  register: result
  when: inventory_hostname == 'bigip2'

- name: Assert Sync configuration from most recent - Second device
  assert:
    that:
      - result is changed
  when: inventory_hostname == 'bigip2'

- name: Sync configuration from most recent - Second device - Idempotent check
  bigip_configsync_action:
    device_group: "{{ device_group }}"
    sync_group_to_device: yes
  register: result
  when: inventory_hostname == 'bigip2'

- name: Assert Sync configuration from most recent - Second device - Idempotent check
  assert:
    that:
      - result is not changed
  when: inventory_hostname == 'bigip2'

- name: Create another pool again - Second device - ensure it was created in previous sync
  bigip_command:
    commands:
      - tmsh create ltm pool cs2.pool
  when: inventory_hostname == 'bigip2'

- name: Assert Create another pool again - Second device - ensure it was deleted in previous sync
  assert:
    that:
      - result is not changed
  when: inventory_hostname == 'bigip2'
